name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.6.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GH_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build and push Docker images with docker-compose
      run: |
        docker-compose -f docker-compose.yaml build
        docker tag claws-mcc-2025_frontend:latest ghcr.io/salesawy1/claws-mcc-2025_frontend:latest
        docker tag claws-mcc-2025_backend:latest ghcr.io/salesawy1/claws-mcc-2025_backend:latest
        docker push ghcr.io/salesawy1/claws-mcc-2025_frontend:latest
        docker push ghcr.io/salesawy1/claws-mcc-2025_backend:latest

    - name: Deploy to AWS EC2
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ec2-user@ec2-34-217-213-65.us-west-2.compute.amazonaws.com << 'EOF'
          echo "${{ secrets.GH_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          
          # Stop and remove any existing container
          docker kill $(docker ps -q)
          
          # Pull the latest images
          docker pull ghcr.io/salesawy1/claws-mcc-2025_frontend:latest
          docker pull ghcr.io/salesawy1/claws-mcc-2025_backend:latest

          # Run new containers
          docker run -d -p 5173:5173 ghcr.io/salesawy1/claws-mcc-2025_frontend:latest
          docker run -d -p 8080:8080 ghcr.io/salesawy1/claws-mcc-2025_backend:latest
        EOF